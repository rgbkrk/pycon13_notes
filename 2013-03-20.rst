Wed Mar 20 12:05:42 EDT 2013
============================

Last day.

Keynote on IPython

Beyond (floating point) number crunching

The purpose of computing is insight, not numbers.

The computer as a microscope
Exploratory: Problem's definition evolves as we understand it
No 'requirements' to build an application against
Mathematica, Maple, Matlab, IDL, etc.
 - All have an interactive environment

   Applications        Languages
  (Tie Fighter)         (Legos)

The lifecycle of a scientific idea (schematically)
1. Individual exploratory work
2. Collaborative development
3. Parallel production runs (HPC, cloud, ...)
4. Publication (with reproducible results!)
5. Education
6. Goto 1.

Speaking the IPython protocol.

I really hope the issues with security and the IPython notebook turn into an OK balance, because right now you have to implicitly trust IPython notebooks shared with you. This doesn't just mean trusting the person who sent it to you/created it, it also means trusting their systems/networks.

At the very least, I would want to make sure code was signed well in advance. Doesn't solve everything, but would help mitigate some strains of jerks.

Pandas + IPython notebook
Wow. Instant HTML sweetness.

LaTeX rendering + SymPy support

.. code-block: python
   from IPython.display import Latex

He also showed how to use R *within* IPython, using data held in Python via IPython.

In the last few days, Julia integration with IPython. Wow.

Numba, Numpy and Julia: some naive comparisons
Julia not very good for array processing -- good at "loopy" code

The notebook viewer is totally awesome. I need to see if I can make a version that is PaaS provider agnostic, or at least has options for others, like dotCloud, OpenShift, etc.

Python for signal processing -- notebooks available. Looks sweet.

Pillars for the notebook format

JSON but version control friendly
Easy for machine processing, fixable by hand if need be
Lots of hooks for metadata
Not Python-specific (Ruby, JS notebooks exist, R, Julia planned)
Produce Markdown, reST, LaTeX, HTML, etc....

**An open format for *sharing, publishing* and archiving executable computational work**


